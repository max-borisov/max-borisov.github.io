<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Max Borisov]]></title>
  <link href="http://max-borisov.github.io/atom.xml" rel="self"/>
  <link href="http://max-borisov.github.io/"/>
  <updated>2015-01-12T13:01:15+02:00</updated>
  <id>http://max-borisov.github.io/</id>
  <author>
    <name><![CDATA[Max Borisov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gem Nokogiri Install Error]]></title>
    <link href="http://max-borisov.github.io/blog/2015-01-12-gem-nokogiri-install-error/"/>
    <updated>2015-01-12T12:45:36+02:00</updated>
    <id>http://max-borisov.github.io/blog/gem-nokogiri-install-error</id>
    <content type="html"><![CDATA[<p>Recently I tried  to install the nokogiri rails gem and got the error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ERROR: Error installing nokogiri:
</span><span class='line'>ERROR: Failed to build gem native extension.</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>There also was a long text describing what is also was wrong. And I found another hint:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>libxml2 is missing. Please locate mkmf.log to investigate how it is failing.</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>So, what I did to solve this problem:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install libxml2 libxslt</span></code></pre></td></tr></table></div></figure>


<p>And run this command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NOKOGIRI_USE_SYSTEM_LIBRARIES=1 gem install nokogiri -- --use-system-libraries --with-iconv-dir=/usr/lib --with-xml2-config="$(brew --prefix libxml2)/bin/xml2-config" --with-xml2-include="$(brew --prefix libxml2)/include/libxml2" --with-xslt-config="$(brew --prefix libxslt)/bin/xslt-config"</span></code></pre></td></tr></table></div></figure>


<p>After that I could install nokogiri.</p>

<p>Here is also a <a href="http://www.nokogiri.org/tutorials/installing_nokogiri.html">tutorial how to install nokogiri.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gem Install Mysql2 Issue]]></title>
    <link href="http://max-borisov.github.io/blog/2015-01-05-gem-install-mysql2-issue/"/>
    <updated>2015-01-05T18:22:03+02:00</updated>
    <id>http://max-borisov.github.io/blog/gem-install-mysql2-issue</id>
    <content type="html"><![CDATA[<p>I tried to create a new Rails app with mysql2 database adapter on MacOS.
But <strong>bundle install</strong> failed with an error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ERROR: Error installing mysql2:
</span><span class='line'>ERROR: Failed to build gem native extension</span></code></pre></td></tr></table></div></figure>


<p>These actions helped me to solve the problem.</p>

<ul>
<li>Install mysql using <a href="http://http://brew.sh/">brew</a> package manager.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install mysql</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Run this command to ensure the mysql has been installed.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew list</span></code></pre></td></tr></table></div></figure>


<p>This command returns information about package and installation directory.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew info mysql</span></code></pre></td></tr></table></div></figure>


<p>In my case it was <strong>/usr/local/opt/mysql/</strong>.</p>

<ul>
<li>Run the command and set path to the mysql config file.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install mysql2 -- --with-mysql-config=/usr/local/opt/mysql/bin/mysql_config</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Make a Custom Asset Files for Javascript/css Files in Yii2]]></title>
    <link href="http://max-borisov.github.io/blog/2014-12-21-how-to-make-a-custom-asset-files-for-javascript-slash-css-files-in-yii2/"/>
    <updated>2014-12-21T18:20:18+02:00</updated>
    <id>http://max-borisov.github.io/blog/how-to-make-a-custom-asset-files-for-javascript-slash-css-files-in-yii2</id>
    <content type="html"><![CDATA[<p>For example, we have a such task: use any javascript library to make image gallery. And the site is running <a href="http://www.yiiframework.com/">Yii 2 framework</a>.
It may seems too easy: just find any suitable jquery plugin and include it. But there is another, more beatuful, way how to accomplish it.</p>

<p>We can use a <a href="http://bower.io/">bower</a> (a package manager for client side) to install and manage plugins we need. But Yii 2 comes with composer which will help us. We will edit config file and specify what bower packages do we need and they will be installed.</p>

<p>What we need to do:</p>

<ol>
<li>Install new bower package</li>
<li>Make Asset to manage and include new files</li>
<li>Use Asset in the application</li>
</ol>


<h4>Install bower packages</h4>

<p>I have decided to use <a href="http://ashleydw.github.io/lightbox">ekko-lightbox</a>. On the <a href="http://bower.io/search/">search page</a> we can check if that plugin is available for the bower. And it is.</p>

<p>So we need to update <strong>require</strong> section of <strong>composer.json</strong> file and set a plugin name.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"require": {
</span><span class='line'>        "php": "&gt;=5.4.0",
</span><span class='line'>        "yiisoft/yii2": "*",
</span><span class='line'>        "yiisoft/yii2-bootstrap": "*",
</span><span class='line'>        "yiisoft/yii2-imagine": "*",
</span><span class='line'>        "yiisoft/yii2-codeception": "*",
</span><span class='line'>        "bower-asset/ekko-lightbox": "*"
</span><span class='line'>    },</span></code></pre></td></tr></table></div></figure>


<p>Then run command</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>composer install</span></code></pre></td></tr></table></div></figure>


<p>After that check the <strong>vendor/bower</strong> directory.</p>

<p><img src="http://max-borisov.github.io/images/posts/yii2-assets/bower.png" alt="vendor-bower directory" /></p>

<p>From now we can include javascript/css files using <strong>$this->registerJs()</strong> method in any view file.</p>

<p>But we are going to use <a href="http://www.yiiframework.com/doc-2.0/guide-structure-assets.html">assets</a>.</p>

<p>To make a new one create a file called <strong>LightBoxAsset.php</strong> under assets directory. And put the code below.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>namespace app\assets;
</span><span class='line'>
</span><span class='line'>use yii\web\AssetBundle;
</span><span class='line'>
</span><span class='line'>class LightBoxAsset extends AssetBundle
</span><span class='line'>{
</span><span class='line'>    public $sourcePath = '@bower/ekko-lightbox';
</span><span class='line'>    public $baseUrl = '@web';
</span><span class='line'>    public $css = [
</span><span class='line'>        'dist/ekko-lightbox.min.css',
</span><span class='line'>    ];
</span><span class='line'>    public $js = [
</span><span class='line'>        'dist/ekko-lightbox.min.js',
</span><span class='line'>   </span></code></pre></td></tr></table></div></figure>


<p><strong>@bower</strong> alias represents a path to the vendor/bower directory.
We use $css ans $js properties to specify what files should be included.</p>

<p>Then we update application main asset file <strong>AppAsset.php</strong> and make it dependes on the asset we just created.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>namespace app\assets;
</span><span class='line'>
</span><span class='line'>use yii\web\AssetBundle;
</span><span class='line'>
</span><span class='line'>class AppAsset extends AssetBundle
</span><span class='line'>{
</span><span class='line'>    public $basePath = '@webroot';
</span><span class='line'>    public $baseUrl = '@web';
</span><span class='line'>    public $css = [
</span><span class='line'>        'css/site.css',
</span><span class='line'>    ];
</span><span class='line'>    public $js = [
</span><span class='line'>    ];
</span><span class='line'>    public $depends = [
</span><span class='line'>        'yii\web\YiiAsset',
</span><span class='line'>        'yii\bootstrap\BootstrapAsset',
</span><span class='line'>        '\app\assets\LightBoxAsset',
</span><span class='line'>    ];
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>AppAsset can be loaded like this</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>AppAsset::register($this);</span></code></pre></td></tr></table></div></figure>


<p>After that a new javascript and css files will be appear in the source code of the page.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aliases for Git Commands.]]></title>
    <link href="http://max-borisov.github.io/blog/2014-11-13-aliases-for-git-commands/"/>
    <updated>2014-11-13T23:09:27+02:00</updated>
    <id>http://max-borisov.github.io/blog/aliases-for-git-commands</id>
    <content type="html"><![CDATA[<p>I used to type full git commands in console.
But there is a way to make short forms by using git aliases.
Like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global alias.ci commit
</span><span class='line'>git config --global alias.co checkout
</span><span class='line'>git config --global alias.pl pull
</span><span class='line'>git config --global alias.ph push
</span><span class='line'>git config --global alias.mr merge</span></code></pre></td></tr></table></div></figure>


<p>And use them like that:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git ci
</span><span class='line'>git co
</span><span class='line'>git mr</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Make Commands Aliases on Unix Based Systems.]]></title>
    <link href="http://max-borisov.github.io/blog/2014-11-13-how-to-make-commands-aliases-on-unix-based-systems/"/>
    <updated>2014-11-13T22:42:26+02:00</updated>
    <id>http://max-borisov.github.io/blog/how-to-make-commands-aliases-on-unix-based-systems</id>
    <content type="html"><![CDATA[<p>Unix based systems can make your life easier allowing you to create aliases for commands/operations you run often.</p>

<p>Just open your profile file with any text editor.</p>

<p>On MacOS</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nano ~/.profile</span></code></pre></td></tr></table></div></figure>


<p>or Linux</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nano ~/.bashrc</span></code></pre></td></tr></table></div></figure>


<p>and add your own alias like in examples below.</p>

<p>Here is some examples I use for myself:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>alias ls="ls -la"
</span><span class='line'>alias octo="cd path_toproject_folder && pwd"
</span><span class='line'># reload profile
</span><span class='line'>alias rl="source ~/.profile"
</span><span class='line'># restart Apache server
</span><span class='line'>alias apa="sudo apachectl restart"
</span><span class='line'>alias gb="git branch"
</span><span class='line'>alias sts="git status"
</span><span class='line'># ssh connect to remote server
</span><span class='line'>alias vds="ssh root@10.11.12.13"
</span><span class='line'># Start Selenium server
</span><span class='line'>alias selenium="java -jar selenium-server-standalone-2.43.0.jar -browserSessionReuse"
</span><span class='line'>alias r:s="rails server"
</span><span class='line'>alias r:g="rails generate"
</span><span class='line'>alias r:g:c="rails generate controller"
</span><span class='line'>alias r:g:s="rails generate scaffold"</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Compare Files on Mac OSX]]></title>
    <link href="http://max-borisov.github.io/blog/2014-10-20-how-to-compare-files-on-mac-osx/"/>
    <updated>2014-10-20T21:42:56+03:00</updated>
    <id>http://max-borisov.github.io/blog/how-to-compare-files-on-mac-osx</id>
    <content type="html"><![CDATA[<p>If you want to compare files you can use a <strong>FileMerge</strong> application.</p>

<p><img src="http://max-borisov.github.io/images/posts/compare_files/screen.png" alt="" /></p>

<p>Or you can run this tool from the command line</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>opendiff file_1.txt file_2.txt</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Set Up a Form Input Value With PHPUnit Selenium2TestCase]]></title>
    <link href="http://max-borisov.github.io/blog/2014-10-16-phpunit-func-tests-set-value-for-a-field/"/>
    <updated>2014-10-16T15:26:54+03:00</updated>
    <id>http://max-borisov.github.io/blog/phpunit-func-tests-set-value-for-a-field</id>
    <content type="html"><![CDATA[<p>If you use PHPUnit_Extensions_Selenium2TestCase for functional test and there is a need to update a specific value for, let&rsquo;s say, input text field, you need at first clear it and only after that set a new value.</p>

<p>Example:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$this-&gt;byCssSelector('#content form input[name="user"]')-&gt;clear();
</span><span class='line'>$this-&gt;byCssSelector('#content form input[name="user"]')-&gt;value(10);</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Default Host for Apache Web Server on Ubuntu]]></title>
    <link href="http://max-borisov.github.io/blog/2014-10-16-default-host-for-apache-web-server/"/>
    <updated>2014-10-16T09:14:44+03:00</updated>
    <id>http://max-borisov.github.io/blog/default-host-for-apache-web-server</id>
    <content type="html"><![CDATA[<p>Here is how you can set a default host:</p>

<ol>
<li>Go to <strong>/etc/apache2/sites-available</strong>.</li>
<li>Find a <strong>default.conf</strong> file.</li>
<li>Inside <strong>VirtualHost</strong> directive put the line <strong>DocumentRoot /var/www/yoursite.com</strong></li>
<li>Restart apache - <strong>/etc/init.d/apache restart</strong></li>
</ol>


<p>Use IP address or yoursite.com domain to access your server.
Code tested on <strong>Ubuntu 13.10</strong>.</p>

<p>Where the <strong>conf</strong> file is located and how it should be modified.</p>

<p><img src="http://max-borisov.github.io/images/posts/apache-default-host/img_2.png" alt="" />
<img src="http://max-borisov.github.io/images/posts/apache-default-host/img_1.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sass in Your Projects]]></title>
    <link href="http://max-borisov.github.io/blog/2014-10-09-sass-in-your-projects/"/>
    <updated>2014-10-09T08:13:51+03:00</updated>
    <id>http://max-borisov.github.io/blog/sass-in-your-projects</id>
    <content type="html"><![CDATA[<p>The other day I have open for myself a <a href="http://sass-lang.com/">Sass</a> tool. I knew about it, but there was no a good reason to start using it. Until this time.</p>

<p>I have a project where we use a bunch of css files. I don&rsquo;t spend much creating css code, I update and maintain it instead. It wasn`t a problem but I started to think how to make this process more friendly. And <a href="http://sass-lang.com/">Sass</a> appeared on the stage. It provides many features to make css development easier such as: <strong>variables</strong>, <strong>nesting</strong> and  <strong>partials</strong>.</p>

<p>A short example: I have defined several variables and then imported partial files where those variables are used. This file is called <strong>application.scss</strong>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$images-dir: '../images';
</span><span class='line'>$fonts-dir: '../fonts';
</span><span class='line'>$PIE-file: '/frontend/css/PIE.htc';
</span><span class='line'>
</span><span class='line'>@import "../base/all";
</span><span class='line'>@import "../base/up";</span></code></pre></td></tr></table></div></figure>


<p>A frontend directory structure:</p>

<p><img src="http://max-borisov.github.io/images/posts/sass_yii/sass-yii.png" alt="sass-yii" /></p>

<h3>How to install Sass.</h3>

<p>Here is a <a href="http://sass-lang.com/install" title="Install Sass">tutorial</a> how it can be done.</p>

<p>If everything was done correct this code(in terminal) will show a <strong>sass</strong> version.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sass -v</span></code></pre></td></tr></table></div></figure>


<p>In my particular case I have already had a project with complete css styles. To start to write css in a new way I had to reformate it before(make a sass compatible).
If you have instaled <strong>sass</strong>, it means you also have a tool <strong>sass-convert</strong> which helps you convert existing css files to scss format.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sass-convert -F css -T scss frontend/existing_css frontend/scss</span></code></pre></td></tr></table></div></figure>


<p>This command converts all css files to scss format. After that you can refactor them, if you want, and use a new syntax to create rules.</p>

<p>This command will convert all scss to css.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sass --style compact --no-cache --update frontend/scss:frontend/css</span></code></pre></td></tr></table></div></figure>


<p>There are several ways how to convert your scss to css.</p>

<h5>Manually update using terminal</h5>

<p>How to make it was shown above.</p>

<h5>Use File watchers. For those who uses PHPStorm</h5>

<p><img src="http://max-borisov.github.io/images/posts/sass_yii/phpstorm-file-watcher.png" alt="phpstorm-file-watcher" /></p>

<h5>Convert files on the fly each time a page was requested</h5>

<p>In <strong>PHP</strong> there is a function called <a href="http://php.net/manual/en/function.exec.php">exec()</a> which can be used to run system commands. In my particular case a project is built upon <a href="http://yiiframework.com">Yii framework</a>.
In configuration file <strong>main.php</strong> I put the following code:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>'onBeginRequest' =&gt; function($event) {      
</span><span class='line'>        if (YII_DEBUG) {
</span><span class='line'>          exec('sass --style compact --no-cache --update frontend/scss:frontend/css', $resp);
</span><span class='line'>        }
</span><span class='line'>    },</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automatically Run Commands After Ssh Login]]></title>
    <link href="http://max-borisov.github.io/blog/2014-10-07-automatically-run-commands-after-ssh-login/"/>
    <updated>2014-10-07T20:28:40+03:00</updated>
    <id>http://max-borisov.github.io/blog/automatically-run-commands-after-ssh-login</id>
    <content type="html"><![CDATA[<p>On your Linux server put the code in ~/.bashrc or /etc/bash.bashrc to to run commands for all users:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if [[ -n $SSH_CONNECTION ]] ; then
</span><span class='line'>    echo "I'm logged in!"
</span><span class='line'>    # put commands here 
</span><span class='line'>fi</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remote SSH Login Without a Password From OS X]]></title>
    <link href="http://max-borisov.github.io/blog/2014-10-07-Remote-SSH-login-without-a-password-from-OS-X/"/>
    <updated>2014-10-07T18:56:53+03:00</updated>
    <id>http://max-borisov.github.io/blog/Remote-SSH-login-without-a-password-from-OS-X</id>
    <content type="html"><![CDATA[<p>There are several ways to connect from OS X via ssh to remote server with no need to specify a password each time.</p>

<p>This article from <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys--2" title="DigitalOcean - How to set up ssh keys">DigitalOcean</a> covers how to generate ssh public key and copy it to a server.
One of the ways is to copy a new key by using <a href="https://github.com/beautifulcode/ssh-copy-id-for-OSX">ssh-copy-id</a> tool. But MaсOS does not shipped with it.</p>

<p>You can install it manually</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo curl https://raw.github.com/beautifulcode/ssh-copy-id-for-OSX/master/ssh-copy-id.sh -o /usr/local/bin/ssh-copy-id 
</span><span class='line'>sudo chmod +x /usr/local/bin/ssh-copy-id</span></code></pre></td></tr></table></div></figure>


<p>or use <a href="https://www.macports.org/">Macports</a> tool</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo port install openssh +ssh_copy_id</span></code></pre></td></tr></table></div></figure>


<p>If you followed instruction and your public ssh key was copied to the server, check this file.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>~/ssh/authorized_key</span></code></pre></td></tr></table></div></figure>


<p>It should not be empty.</p>

<p>Then try to connect to server.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notebook Cooler DeepCool N11]]></title>
    <link href="http://max-borisov.github.io/blog/2014-10-02-notebook-cooler-deepcool-n11/"/>
    <updated>2014-10-02T12:47:22+03:00</updated>
    <id>http://max-borisov.github.io/blog/notebook-cooler-deepcool-n11</id>
    <content type="html"><![CDATA[<p>Several months ago I have purchased a notebook cooler.</p>

<p>It is a really cool stand for the laptop. It has no any wires, fans, etc. It is a firm, thin, metal thing. Very handy.</p>

<p>I have only one wish - I could be a bit lighter.</p>

<p>Here are some photos:</p>

<p><img src="http://max-borisov.github.io/images/posts/notebook_cooler/38.jpg" alt="side view" />
<img src="http://max-borisov.github.io/images/posts/notebook_cooler/37.jpg" alt="top view" />
<img src="http://max-borisov.github.io/images/posts/notebook_cooler/35.jpg" alt="side view with laptop" />
<img src="http://max-borisov.github.io/images/posts/notebook_cooler/34.jpg" alt="top view with laptop" /></p>
]]></content>
  </entry>
  
</feed>
